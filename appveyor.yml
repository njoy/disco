version: '{build}'
 
cache:
- x86_64-6.1.0-release-win32-seh-rt_v5-rev1.7z

environment:
  CTEST_OUTPUT_ON_FAILURE: 1
  matrix:
  - MINGW_DIR: mingw64
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/6.1.0/threads-win32/seh/x86_64-6.1.0-release-win32-seh-rt_v5-rev1.7z/download
    MINGW_ARCHIVE: x86_64-6.1.0-release-win32-seh-rt_v5-rev1.7z

install:
  - if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - 7z x -y "%MINGW_ARCHIVE%" > nul
  # CMake refuses to generate MinGW Makefiles if sh.exe is in the Path
  - ps: Get-Command sh.exe -All | Remove-Item

before_build:
  - set Path=%CD%\%MINGW_DIR%\bin;%Path%
  - g++ --version
  - mingw32-make --version
  - cmake --version
  - echo "NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%"
  - ps: python ./fetch_subprojects.py
  - ps: new-item -Name build -ItemType folder
  - ps: cd build  
  - cmake .. -G "MinGW Makefiles"

build_script:
  - cmake --build . --use-stderr --target all -- -j%NUMBER_OF_PROCESSORS%

after_build:
  - set Path=%WINDBG_DIR%;%Path%
  - cmake --build . --use-stderr --target test
